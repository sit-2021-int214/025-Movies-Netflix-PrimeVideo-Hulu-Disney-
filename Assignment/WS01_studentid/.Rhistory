"Avengers: Infinity War","Ant-Man and the Wasp","Captain Marvel","Avengers: Endgame",
"Spider-Man: Far From Home","WandaVision","Falcon and the Winter Soldier","Loki","Black Widow")
years <- c(2008,2008,2010,2011,2011,2012,2013,2013,2014,2014,2015,2015,2016,2016,
2017,2017,2017,2017,2018,2018,2019,2019,2019,2021,2021,2021)
marvel_movies <- data.frame(years,name)
View(marvel_movies)
name <- c("Iron Man","The Incredible Hulk","Iron Man 2","Thor","Captain America: The First Avenger",
"The Avengers","Iron Man 3","Thor: The Dark World","Captain America: The Winter Soldier",
"Guardians of the Galaxy","Avengers: Age of Ultron","Ant-Man","Captain America: Civil War",
"Doctor Strange","Guardians of the Galaxy 2","Spider-Man: Homecoming","Thor: Ragnarok","Black Panther",
"Avengers: Infinity War","Ant-Man and the Wasp","Captain Marvel","Avengers: Endgame",
"Spider-Man: Far From Home","WandaVision","Falcon and the Winter Soldier","Loki","Black Widow")
years <- c(2008,2008,2010,2011,2011,2012,2013,2013,2014,2014,2015,2015,2016,2016,
2017,2017,2017,2017,2018,2018,2019,2019,2019,2021,2021,2021,2021)
marvel_movies <- data.frame(name,years)
View(marvel_movies)
# Answer -> ใช้ Vector ในการเก็บข้อมูลเพราะเป็นกลุ่มของ Character ประเภทเดียว
name <- c("Iron Man","The Incredible Hulk","Iron Man 2","Thor","Captain America: The First Avenger",
"The Avengers","Iron Man 3","Thor: The Dark World","Captain America: The Winter Soldier",
"Guardians of the Galaxy","Avengers: Age of Ultron","Ant-Man","Captain America: Civil War",
"Doctor Strange","Guardians of the Galaxy 2","Spider-Man: Homecoming","Thor: Ragnarok","Black Panther",
"Avengers: Infinity War","Ant-Man and the Wasp","Captain Marvel","Avengers: Endgame",
"Spider-Man: Far From Home","WandaVision","Falcon and the Winter Soldier","Loki","Black Widow")
years <- c(2008,2008,2010,2011,2011,2012,2013,2013,2014,2014,2015,2015,2016,2016,
2017,2017,2017,2017,2018,2018,2019,2019,2019)
marvel_movies <- data.frame(name,years)
View(marvel_movies)
# Answer -> ใช้ Vector ในการเก็บข้อมูลเพราะเป็นกลุ่มของ Character ประเภทเดียว
name <- c("Iron Man","The Incredible Hulk","Iron Man 2","Thor","Captain America: The First Avenger",
"The Avengers","Iron Man 3","Thor: The Dark World","Captain America: The Winter Soldier",
"Guardians of the Galaxy","Avengers: Age of Ultron","Ant-Man","Captain America: Civil War",
"Doctor Strange","Guardians of the Galaxy 2","Spider-Man: Homecoming","Thor: Ragnarok","Black Panther",
"Avengers: Infinity War","Ant-Man and the Wasp","Captain Marvel","Avengers: Endgame",
"Spider-Man: Far From Home","WandaVision","Falcon and the Winter Soldier","Loki","Black Widow")
years <- c(2008,2008,2010,2011,2011,2012,2013,2013,2014,2014,2015,2015,2016,2016,
2017,2017,2017,2017,2018,2018,2019,2019,2019)
marvel_movies <- data.frame(name,years)
View(marvel_movies)
name <- c("Iron Man","The Incredible Hulk","Iron Man 2","Thor","Captain America: The First Avenger",
"The Avengers","Iron Man 3","Thor: The Dark World","Captain America: The Winter Soldier",
"Guardians of the Galaxy","Avengers: Age of Ultron","Ant-Man","Captain America: Civil War",
"Doctor Strange","Guardians of the Galaxy 2","Spider-Man: Homecoming","Thor: Ragnarok","Black Panther",
"Avengers: Infinity War","Ant-Man and the Wasp","Captain Marvel","Avengers: Endgame",
"Spider-Man: Far From Home","WandaVision","Falcon and the Winter Soldier","Loki","Black Widow")
years <- c(2008,2008,2010,2011,2011,2012,2013,2013,2014,2014,2015,2015,2016,2016,
2017,2017,2017,2017,2018,2018,2019,2019,2019,2021,2021,2021,2021)
marvel_movies <- data.frame(name,years)
View(marvel_movies)
#The numbers of movies
#27
print(length(names))
#Find the 19th movies name
print(names[19])
print(cfrequence)
uyear <- unique(years)
frequence <- match(years,uyear)
cfrequence <- tabulate(frequence)
print(cfrequence)
print(years(sum(years[1:which.max(cfrequence)])))
print(years(sum(cfrequence[1:which.max(cfrequence)])))
print(years[sum(cfrequence[1:which.max(cfrequence)]]))
print(years[sum(cfrequence[1:which.max(cfrequence])])
print(years[sum(cfrequence[1:which.max(cfrequence])]))
print(years[sum(cfrequence[1:which.max(cfrequence)]  ] )
print(years[sum(cfrequence[1:which.max(cfrequence)]  ] )
print(years[sum(cfrequence[1:which.max(cfrequence)]  )] )
View(cats)
View(cats)
View(Cats)
View(Hotels)
library(MASS)
View(Cats)
install.packages("MASS")
library(MASS)
View(Cats)
install.packages("MASS")
library(MASS)
View(Cats)
View(cats)
library(MASS)
View(cats)
summary(cats)
factor(cats)
View(survey)
library(DescTools)
factor(cats$Sex)
unique(cats$sex)
?survey
?survey
factor(survey$Wr.Hnd)
min(survey$Wr.Hnd)
max(survey$Wr.Hnd)
factor(survey$Wr.Hnd)
factor(survey$Smoke)
summary(survey$Smoke)
max.col(survey$Age)
colMeans(survey$Age)
summary(survey$Age)
max(survey$Age)
min(survey$Age)
max(survey$Height)
max(survey$Height,na.rm=FALSE)
max(survey$Height,na.rm=TRUE)
factor(survey$Fold)
summary(survey$Fold)
?cats
ratio
ratio <- cats$Bwt /cats$Hwt
print(ratio)
ratio <- cats$Bwt*1000 /cats$Hwt
print(ratio)
View(ratio)
ratio <- cats$Bwt /cats$Hwt*1000
print(ratio)
ratio <- cats$Bwt /(cats$Hwt*1000)
print(ratio)
ratio <- cats$Bwt /(cats$Hwt/1000)
print(ratio)
?survey
mean(survey$Height)
mean(survey$Height,na.rm=TRUE)
factor(cats$Sex)
View(marvel_movies)
View(survey)
Mode(W.Hnd)
Mode(survey$W.Hnd)
Mode(survey$W.Hnd,na.rm=TRUE)
data <- read.csv("~/Downloads/MoviesOnStreamingPlatforms_updated.csv")
View(data)
grep("IMDb",data)
grep("IMDb",data$IMDb)
library(MASS)
survey$Exer
grep("Freq",survey$Exer)
grep("9.0",data$IMDb)
grep(9.0,data$IMDb)
a <- "HELLO"
a
for (a in data) {
print(a$Title)
}
for (a in data$Title) {
print(a)
}
print(a)
for (a in data$IMDb) {
if(a>9.0){
print(a)
}
install.packages(dplyr)
install.packages("dplyr")
library(dplyr)
install.packages("dplyr")
install.packages("dplyr")
library(dplyr)
glimpse(mtcars)
str(mtcars)
glimpse(mtcars)
glimpse(mtcars)
str(starwars)
glimpse(starwars)
typeof(starwars$height)
typeof(starwars$mass)
table(starwars)
mean(starwars$height)
starwars$height%>%mean()
starwars$height%>%mean(rm.na=TRUE)
mean(starwars$height,rm.na=TRUE)
mean(starwars$mass)
glimpse(mtcars)
mtcars$mpg %>% mean()
starwars$height %>% mean()
mean(starwars$height,na.rm = TRUE)
starwars$height%>% mean(na.rm=TRUE)
str(starwars)
glimpse(starwars)
starwars %>%select(name,height,hair_color)
starwars %>%fliter(height>100)
install.packages("dplyr")
starwars %>%filter(height>100)
starwars %>% select(name,height,mass)
starwars %>% select(name,height,mass) %>% filter(height>170)
starwars %>% select(name,height,mass) %>% filter(height>170,mass>70)
starwars %>% select(name,height,mass) %>% filter(height>170,mass<65)
starwars %>% select(name,height,mass,sex) %>% filter(height>170,mass<65)
starwars%>% summarise(height=mean(na.rm=T))
starwars%>% summarise(height=mean(height,na.rm=T))
starwars%>% summarise(x=mean(height,na.rm=T))
starwars%>% group_by(sex)%>%select(height)
starwars%>% group_by(sex)%>%select(height)%>%
summarise(avg=mean(height,na.rm=T))
starwars%>% group_by(sex)%>%select(height)
starwars%>%select(height)%>% group_by(sex)
starwars%>%select(height,sex)%>% group_by(sex)
starwars%>%select(height,sex)
starwars%>%select(height,sex)%>% group_by(sex)%>% summarise(avg=mean(height))
starwars%>%select(height,sex)%>% group_by(sex)%>% summarise(avg=mean(height,na.rm=T))
starwars %>% select(name,height,mass)
library(dplyr)
starwars %>% select(name,height,mass,sex) %>% filter(height>170,mass<65)
library("MASS")
library("MASS")
View(cats)
cats %>% select(Sex)
cats %>% select(Sex)
cats %>% select(Sex)%>% filter(Sex='F')
cats %>% select(cats$Sex)%>% filter(Sex='F')
cats %>% select(cats$Sex)
starwars %>% select(name,height,mass)
library(dplyr)
glimpse(starwars)
mean(starwars$mass)
mtcars$mpg %>% mean()
starwars %>% select(name,height,mass)
starwars %>% dplyr::select(name,height,mass)
cats %>% dplyr::select(cats$Sex)
cats %>% dplyr::select(Sex)%>% filter(Sex='F')
cats %>% dplyr::select(Sex)%>% filter(Sex=='F')
cats %>%count(dplyr::select(Sex)%>% filter(Sex=='F'))
cats %>%dplyr::count(dplyr::select(Sex)%>% filter(Sex=='F'))
cats %>%dplyr::select(Sex)%>% filter(Sex=='F'))
cats %>%dplyr::select(Sex)%>% filter(Sex=='F')
survey %>% dplyr::summarise(avg = mean(Age))
survey %>% dplyr::summarise()
dplyr::summarise(survey)
dplyr::summarise(survey$Sex)
dplyr::summarise(avg=mean(survey%Age))
dplyr::summarise(avg=mean(survey$Age))
cats %>% dplyr::select(Sex)%>% dplyr::group_by(Sex)
starwars%>%select(height,sex)%>% group_by(sex)%>% summarise(avg=mean(height,na.rm=T))
starwars%>%dplyr::select(height,sex)%>% dplyr::group_by(sex)%>% dplyr::summarise(avg=mean(height,na.rm=T))
cats %>% dplyr::select(Sex)%>% dplyr::group_by(Sex)%>% dplyr::summarise(sex=count(Sex))
cats %>% dplyr::select(Sex)%>% dplyr::group_by(Sex)%>% dplyr::summarise(sex=Sex.length)
cats %>% dplyr::select(Sex)%>% dplyr::group_by(Sex)%>% dplyr::summarise(sex=length(Sex))
cats %>%  dplyr::group_by(Sex)%>%dplyr::select(Sex)%>% dplyr::summarise(sex=length(Sex))
View(survey)
survey %>% dplyr::select(Exer) %>% dplyr::group_by(Exer)%>% dplyr::summarise(type=length(Exer))
survey %>% dplyr::select(Exer) %>% dplyr::group_by(Exer)%>%dplyr::filter(Exer!="None")%>% dplyr::summarise(type=length(Exer))
survey %>% dplyr::select(Exer) %>% dplyr::group_by(Exer)%>%dplyr::filter(Exer!="None")%>% dplyr::summarise(type=sum(Exer))
survey %>% dplyr::select(Exer) %>% dplyr::filter(Exer!="None")%>%
dplyr::summarise(type=sum(Exer))
survey %>% dplyr::select(Exer) %>% dplyr::filter(Exer!="None")%>%
dplyr::summarise(type=(Exer))
survey %>% dplyr::select(Exer) %>% dplyr::group_by(Exer)%>%dplyr::filter(Exer!="None")%>%
dplyr::summarise(type=(Exer))
survey %>% dplyr::select(Exer) %>% dplyr::group_by(Exer)%>%dplyr::filter(Exer!="None")%>%
%>%dplyr::summarise(type=Exer)
survey %>% dplyr::select(Exer) %>% dplyr::group_by(Exer)%>%dplyr::filter(Exer!="None")%>% dplyr::summarise(type=length(Exer))
survey %>% dplyr::select(Exer) %>% dplyr::group_by(Exer)%>%dplyr::filter(Exer!="None")%>%
dplyr::summarise(type=length(Exer)) %>% dplyr::select(type)%>% dplyr::summarise(sum(type))
y(readr)
library(deplyr)
library(assertive)
library(stringr)
movies <- read_csv("MoviesOnStreamingPlatforms_updated.csv")
# null correction
movies$Age<- movies$Age%>%replace(is.na(movies$Age),"all")
movies$Directors <- movies$Directors%>%replace(is.na(movies$Directors),"UNKNOWN")
movies$IMDb<- movies$IMDb%>% replace(is.na(movies$IMDb),"0/10")
movies$`Rotten Tomatoes`<- movies$`Rotten Tomatoes`%>% replace(is.na(movies$`Rotten Tomatoes`),"0/100")
movies$Country<- movies$Country%>%replace(is.na(movies$Country),"UNKNOWN")
movies$Runtime<- movies$Runtime%>%replace(is.na(movies$Runtime),0)
movies$Genres <- movies$Genres%>%replace(is.na(movies$Genres),"UNKNOWN")
movies$Language <- movies$Language%>%replace(is.na(movies$Language),"UNKNOWN")
# drop column TYPE
movies <- select(movies,-c(Type))
# format score
movies$`Rotten Tomatoes`<- movies$`Rotten Tomatoes`%>%str_remove("/100")%>%str_trim()%>%as.numeric()
movies$IMDb <- movies$IMDb%>% str_remove("/10")%>%str_trim()%>%as.numeric()
library(readr)
library(deplyr)
library(assertive)
library(stringr)
movies <- read_csv("MoviesOnStreamingPlatforms_updated.csv")
# null correction
movies$Age<- movies$Age%>%replace(is.na(movies$Age),"all")
movies$Directors <- movies$Directors%>%replace(is.na(movies$Directors),"UNKNOWN")
movies$IMDb<- movies$IMDb%>% replace(is.na(movies$IMDb),"0/10")
movies$`Rotten Tomatoes`<- movies$`Rotten Tomatoes`%>% replace(is.na(movies$`Rotten Tomatoes`),"0/100")
movies$Country<- movies$Country%>%replace(is.na(movies$Country),"UNKNOWN")
movies$Runtime<- movies$Runtime%>%replace(is.na(movies$Runtime),0)
movies$Genres <- movies$Genres%>%replace(is.na(movies$Genres),"UNKNOWN")
movies$Language <- movies$Language%>%replace(is.na(movies$Language),"UNKNOWN")
# drop column TYPE
movies <- select(movies,-c(Type))
# format score
movies$`Rotten Tomatoes`<- movies$`Rotten Tomatoes`%>%str_remove("/100")%>%str_trim()%>%as.numeric()
movies$IMDb <- movies$IMDb%>% str_remove("/10")%>%str_trim()%>%as.numeric()
movies <- read_csv("MoviesOnStreamingPlatforms_updated.csv")
library(readr)
library(deplyr)
library(assertive)
library(stringr)
movies <- read_csv("../../../MoviesOnStreamingPlatforms_updated.csv")
# null correction
movies$Age<- movies$Age%>%replace(is.na(movies$Age),"all")
movies$Directors <- movies$Directors%>%replace(is.na(movies$Directors),"UNKNOWN")
movies$IMDb<- movies$IMDb%>% replace(is.na(movies$IMDb),"0/10")
movies$`Rotten Tomatoes`<- movies$`Rotten Tomatoes`%>% replace(is.na(movies$`Rotten Tomatoes`),"0/100")
movies$Country<- movies$Country%>%replace(is.na(movies$Country),"UNKNOWN")
movies$Runtime<- movies$Runtime%>%replace(is.na(movies$Runtime),0)
movies$Genres <- movies$Genres%>%replace(is.na(movies$Genres),"UNKNOWN")
movies$Language <- movies$Language%>%replace(is.na(movies$Language),"UNKNOWN")
# drop column TYPE
movies <- select(movies,-c(Type))
# format score
movies$`Rotten Tomatoes`<- movies$`Rotten Tomatoes`%>%str_remove("/100")%>%str_trim()%>%as.numeric()
movies$IMDb <- movies$IMDb%>% str_remove("/10")%>%str_trim()%>%as.numeric()
View(movies)
View(movies)
movies <- read_csv("../../../MoviesOnStreamingPlatforms_updated.csv")
dir()
setwd("Year2KMUTT/INT214")
setwd("Year2KMUTT/INT214")
library(readr)
library(deplyr)
library(assertive)
library(stringr)
movies <- read_csv("../../../MoviesOnStreamingPlatforms_updated.csv")
# null correction
movies$Age<- movies$Age%>%replace(is.na(movies$Age),"all")
movies$Directors <- movies$Directors%>%replace(is.na(movies$Directors),"UNKNOWN")
movies$IMDb<- movies$IMDb%>% replace(is.na(movies$IMDb),"0/10")
movies$`Rotten Tomatoes`<- movies$`Rotten Tomatoes`%>% replace(is.na(movies$`Rotten Tomatoes`),"0/100")
movies$Country<- movies$Country%>%replace(is.na(movies$Country),"UNKNOWN")
movies$Runtime<- movies$Runtime%>%replace(is.na(movies$Runtime),0)
movies$Genres <- movies$Genres%>%replace(is.na(movies$Genres),"UNKNOWN")
movies$Language <- movies$Language%>%replace(is.na(movies$Language),"UNKNOWN")
# drop column TYPE
movies <- select(movies,-c(Type))
# format score
movies$`Rotten Tomatoes`<- movies$`Rotten Tomatoes`%>%str_remove("/100")%>%str_trim()%>%as.numeric()
movies$IMDb <- movies$IMDb%>% str_remove("/10")%>%str_trim()%>%as.numeric()
setwd("Year2KMUTT/INT214/GitRepo/Assignment/WS01_studentid")
library(readr)
library(deplyr)
library(assertive)
library(stringr)
movies <- read_csv("MoviesOnStreamingPlatforms_updated.csv")
# null correction
movies$Age<- movies$Age%>%replace(is.na(movies$Age),"all")
movies$Directors <- movies$Directors%>%replace(is.na(movies$Directors),"UNKNOWN")
movies$IMDb<- movies$IMDb%>% replace(is.na(movies$IMDb),"0/10")
movies$`Rotten Tomatoes`<- movies$`Rotten Tomatoes`%>% replace(is.na(movies$`Rotten Tomatoes`),"0/100")
movies$Country<- movies$Country%>%replace(is.na(movies$Country),"UNKNOWN")
movies$Runtime<- movies$Runtime%>%replace(is.na(movies$Runtime),0)
movies$Genres <- movies$Genres%>%replace(is.na(movies$Genres),"UNKNOWN")
movies$Language <- movies$Language%>%replace(is.na(movies$Language),"UNKNOWN")
# drop column TYPE
movies <- select(movies,-c(Type))
# format score
movies$`Rotten Tomatoes`<- movies$`Rotten Tomatoes`%>%str_remove("/100")%>%str_trim()%>%as.numeric()
movies$IMDb <- movies$IMDb%>% str_remove("/10")%>%str_trim()%>%as.numeric()
movies <- read_csv("MoviesOnStreamingPlatforms_updated.csv")
library(readr)
library(deplyr)
library(assertive)
library(stringr)
install.packages("deplyr")
library(assertive)
library(stringr)
library(readr)
library(deplyr)
library(dplyr)
install.packages("dplyr")
install.packages("dplyr")
library(dplyr)
library(readr)
library(dplyr)
library(assertive)
library(stringr)
movies <- read_csv("MoviesOnStreamingPlatforms_updated.csv")
setwd("Year2KMUTT/INT214/GitRepo/Assignment/WS01_studentid")
setwd("Year2KMUTT/INT214")
setwd("../")
setwd("../")
dir()
dir()
setwd("Year2KMUTT/")
dir()
setwd("Year2KMUTT/INT214/")
setwd("Year2KMUTT/INT214")
setwd("INT214")
setwd("GitRepo/Assignment/WS01_studentid")
movies <- read_csv("MoviesOnStreamingPlatforms_updated.csv")
# null correction
movies$Age<- movies$Age%>%replace(is.na(movies$Age),"all")
movies$Directors <- movies$Directors%>%replace(is.na(movies$Directors),"UNKNOWN")
movies$IMDb<- movies$IMDb%>% replace(is.na(movies$IMDb),"0/10")
movies$`Rotten Tomatoes`<- movies$`Rotten Tomatoes`%>% replace(is.na(movies$`Rotten Tomatoes`),"0/100")
movies$Country<- movies$Country%>%replace(is.na(movies$Country),"UNKNOWN")
movies$Runtime<- movies$Runtime%>%replace(is.na(movies$Runtime),0)
movies$Genres <- movies$Genres%>%replace(is.na(movies$Genres),"UNKNOWN")
movies$Language <- movies$Language%>%replace(is.na(movies$Language),"UNKNOWN")
# drop column TYPE
movies <- select(movies,-c(Type))
# format score
movies$`Rotten Tomatoes`<- movies$`Rotten Tomatoes`%>%str_remove("/100")%>%str_trim()%>%as.numeric()
movies$IMDb <- movies$IMDb%>% str_remove("/10")%>%str_trim()%>%as.numeric()
View(movies)
movies%>% head(6)
library(readr)
library(dplyr)
library(assertive)
library(stringr)
movies <- read_csv("MoviesOnStreamingPlatforms_updated.csv")
# null correction
movies$Age<- movies$Age%>%replace(is.na(movies$Age),"all")
movies$Directors <- movies$Directors%>%replace(is.na(movies$Directors),"UNKNOWN")
movies$IMDb<- movies$IMDb%>% replace(is.na(movies$IMDb),"0/10")
movies$`Rotten Tomatoes`<- movies$`Rotten Tomatoes`%>% replace(is.na(movies$`Rotten Tomatoes`),"0/100")
movies$Country<- movies$Country%>%replace(is.na(movies$Country),"UNKNOWN")
movies$Runtime<- movies$Runtime%>%replace(is.na(movies$Runtime),0)
movies$Genres <- movies$Genres%>%replace(is.na(movies$Genres),"UNKNOWN")
movies$Language <- movies$Language%>%replace(is.na(movies$Language),"UNKNOWN")
# drop column TYPE
movies <- select(movies,-c(Type)
movies%>% glimpse()
glimpse(movies)
View(movies)
#remove col x
movies%>%table()
#remove col x
movies$Title%>%table()
#remove col x
movies$IMDb%>%table()
#remove col x
movies$Netflix%>% table()
#remove col x
summary(movies)
library(readr)
library(dplyr)
library(assertive)
library(stringr)
movies <- read_csv("MoviesOnStreamingPlatforms_updated.csv")
# null correction
movies$Age<- movies$Age%>%replace(is.na(movies$Age),"all")
movies$Directors <- movies$Directors%>%replace(is.na(movies$Directors),"UNKNOWN")
movies$IMDb<- movies$IMDb%>% replace(is.na(movies$IMDb),"0/10")
movies$`Rotten Tomatoes`<- movies$`Rotten Tomatoes`%>% replace(is.na(movies$`Rotten Tomatoes`),"0/100")
movies$Country<- movies$Country%>%replace(is.na(movies$Country),"UNKNOWN")
movies$Runtime<- movies$Runtime%>%replace(is.na(movies$Runtime),0)
movies$Genres <- movies$Genres%>%replace(is.na(movies$Genres),"UNKNOWN")
movies$Language <- movies$Language%>%replace(is.na(movies$Language),"UNKNOWN")
# drop column TYPE
movies <- select(movies,-c(Type))
# drop column ..1
movies<- selectt(movies,-c(...1))
# format score
movies$`Rotten Tomatoes`<- movies$`Rotten Tomatoes`%>%str_remove("/100")%>%str_trim()%>%as.numeric()
movies$IMDb <- movies$IMDb%>% str_remove("/10")%>%str_trim()%>%as.numeric()
#null checking
print(any(is.na(movies$Age)))
print(any(is.na(movies$Directors)))
print(any(is.na(movies$IMDb)))
movies%>% select(Age)%>% filter(is.na(movies$Age))
movies%>% select(Age)%>% filter(movies$IMDb<5)
movies%>% select(movies$Title)
# duplicated check
movies%>%duplicated()%>% table()
#1
IMDb_avg<-(movies%>% select(IMDb)%>% filter(movies$IMDb>0)%>%sum() ) / count(movies)
print(IMDb_avg)
#2
rotten_avg<-(movies%>% select(`Rotten Tomatoes`)%>% filter(movies$`Rotten Tomatoes`>0)%>%sum() ) / count(movies)
print(rotten_avg)
#3
avg<-(rotten_avg+(IMDb_avg*10))/2
print(avg)
#4
movie_90 <- movies%>%select(Year)%>%filter(movies$Year<=2000 & movies$Year>=1990)%>%count()
print(movie_90)
#5
movies%>% select(Age) %>% table()
#6
#grepl ได้ true false
#grep ได้ index
#grep(l) (pattern, ค่าที่ตรวจสอบ)
table(grepl("United States",movies$Country)& grepl(",",movies$Language) )
#7
director<-movies %>% select(Title,Directors)%>%filter(movies$Directors =="A.L. Vijay")
print(director)
director%>% count()
View(movies)
movies%>% head(6)
glimpse(movies)
# drop column ..1
movies<- selectt(movies,-c(...1))
# drop column ..1
movies<- select(movies,-c(...1))
glimpse(movies)
library(readr)
library(dplyr)
library(assertive)
library(stringr)
movies <- read_csv("MoviesOnStreamingPlatforms_updated.csv")
# null correction
movies$Age<- movies$Age%>%replace(is.na(movies$Age),"all")
movies$Directors <- movies$Directors%>%replace(is.na(movies$Directors),"UNKNOWN")
movies$IMDb<- movies$IMDb%>% replace(is.na(movies$IMDb),"0/10")
movies$`Rotten Tomatoes`<- movies$`Rotten Tomatoes`%>% replace(is.na(movies$`Rotten Tomatoes`),"0/100")
movies$Country<- movies$Country%>%replace(is.na(movies$Country),"UNKNOWN")
movies$Runtime<- movies$Runtime%>%replace(is.na(movies$Runtime),0)
movies$Genres <- movies$Genres%>%replace(is.na(movies$Genres),"UNKNOWN")
movies$Language <- movies$Language%>%replace(is.na(movies$Language),"UNKNOWN")
# drop column TYPE
movies <- select(movies,-c(Type))
# drop column ..1
movies<- select(movies,-c(...1))
glimpse(movies)
movies <- read_csv("MoviesOnStreamingPlatforms_updated.csv")
View(movies)
